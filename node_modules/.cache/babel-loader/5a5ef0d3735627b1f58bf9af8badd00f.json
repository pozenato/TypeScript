{"ast":null,"code":"import _regeneratorRuntime from \"/home/bpozenato/Documents/Estudos/TypeScript/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(load);\n\nimport { call, put } from 'redux-saga/effects';\nimport api from '../../../services/api';\nimport { loadSuccess, loadFailure } from './actions';\nexport function load() {\n  var response;\n  return _regeneratorRuntime.wrap(function load$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(api.get, 'users/diego3g/repos');\n\n        case 3:\n          response = _context.sent;\n          _context.next = 6;\n          return put(loadSuccess(response.data));\n\n        case 6:\n          _context.next = 12;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put(loadFailure());\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}","map":{"version":3,"sources":["/home/bpozenato/Documents/Estudos/TypeScript/src/store/ducks/repositories/sagas.ts"],"names":["load","call","put","api","loadSuccess","loadFailure","get","response","data"],"mappings":";;;;yBAKiBA,I;;AALjB,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,WAAzC;AAEA,OAAO,SAAUL,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEc,iBAAMC,IAAI,CAACE,GAAG,CAACG,GAAL,EAAU,qBAAV,CAAV;;AAFd;AAEGC,UAAAA,QAFH;AAAA;AAIH,iBAAML,GAAG,CAACE,WAAW,CAACG,QAAQ,CAACC,IAAV,CAAZ,CAAT;;AAJG;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAMH,iBAAMN,GAAG,CAACG,WAAW,EAAZ,CAAT;;AANG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { call, put } from 'redux-saga/effects';\nimport api from '../../../services/api';\n\nimport { loadSuccess, loadFailure } from './actions';\n\nexport function* load() {\n  try {\n    const response = yield call(api.get, 'users/diego3g/repos');\n\n    yield put(loadSuccess(response.data));\n  } catch (err) {\n    yield put(loadFailure());\n  }\n}\n"]},"metadata":{},"sourceType":"module"}