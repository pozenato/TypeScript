{"ast":null,"code":"import _classCallCheck from \"/home/bpozenato/Documents/Estudos/TypeScript/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bpozenato/Documents/Estudos/TypeScript/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/bpozenato/Documents/Estudos/TypeScript/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bpozenato/Documents/Estudos/TypeScript/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/bpozenato/Documents/Estudos/TypeScript/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/bpozenato/Documents/Estudos/TypeScript/src/components/RepositoryList/index.tsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as RepositoriesActions from '../../store/ducks/repositories/actions';\nimport RepositoryItem from '../RepositoryItem';\n\nvar RepositoryList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RepositoryList, _Component);\n\n  function RepositoryList() {\n    _classCallCheck(this, RepositoryList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RepositoryList).apply(this, arguments));\n  }\n\n  _createClass(RepositoryList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var loadRequest = this.props.loadRequest;\n      loadRequest();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var repositories = this.props.repositories;\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, repositories.map(function (repository) {\n        return React.createElement(RepositoryItem, {\n          key: repository.id,\n          repository: repository,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return RepositoryList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    repositories: state.repositories.data\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators(RepositoriesActions, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RepositoryList);","map":{"version":3,"sources":["/home/bpozenato/Documents/Estudos/TypeScript/src/components/RepositoryList/index.tsx"],"names":["React","Component","connect","bindActionCreators","RepositoriesActions","RepositoryItem","RepositoryList","loadRequest","props","repositories","map","repository","id","mapStateToProps","state","data","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAA6C,OAA7C;AAKA,OAAO,KAAKC,mBAAZ,MAAqC,wCAArC;AAEA,OAAOC,cAAP,MAA2B,mBAA3B;;IAYMC,c;;;;;;;;;;;;;wCACgB;AAAA,UACVC,WADU,GACM,KAAKC,KADX,CACVD,WADU;AAGlBA,MAAAA,WAAW;AACZ;;;6BAEQ;AAAA,UACCE,YADD,GACkB,KAAKD,KADvB,CACCC,YADD;AAGP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,YAAY,CAACC,GAAb,CAAiB,UAAAC,UAAU;AAAA,eAC1B,oBAAC,cAAD;AAAgB,UAAA,GAAG,EAAEA,UAAU,CAACC,EAAhC;AAAoC,UAAA,UAAU,EAAED,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD0B;AAAA,OAA3B,CADH,CADF;AAOD;;;;EAjB0BV,S;;AAoB7B,IAAMY,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAA8B;AACpDL,IAAAA,YAAY,EAAEK,KAAK,CAACL,YAAN,CAAmBM;AADmB,GAA9B;AAAA,CAAxB;;AAIA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,SAAwBd,kBAAkB,CAACC,mBAAD,EAAsBa,QAAtB,CAA1C;AAAA,CAA3B;;AAEA,eAAef,OAAO,CAACW,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CV,cAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport { Repository } from '../../store/ducks/repositories/types';\nimport { ApplicationState } from '../../store';\n\nimport * as RepositoriesActions from '../../store/ducks/repositories/actions';\n\nimport RepositoryItem from '../RepositoryItem';\n\ninterface StateProps {\n  repositories: Repository[]\n}\n\ninterface DispatchProps {\n  loadRequest(): void\n}\n\ntype Props = StateProps & DispatchProps\n\nclass RepositoryList extends Component<Props> {\n  componentDidMount() {\n    const { loadRequest } = this.props;\n\n    loadRequest();\n  }\n\n  render() {\n    const { repositories } = this.props;\n\n    return (\n      <ul>\n        {repositories.map(repository => (\n          <RepositoryItem key={repository.id} repository={repository} />\n        ))}\n      </ul>\n    );\n  }\n}\n\nconst mapStateToProps = (state: ApplicationState) => ({\n  repositories: state.repositories.data,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators(RepositoriesActions, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RepositoryList);\n"]},"metadata":{},"sourceType":"module"}